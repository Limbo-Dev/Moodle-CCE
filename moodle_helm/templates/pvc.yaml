apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.moodle.fullname }}-pvc
  namespace: {{ .Values.namespace }}
  {{- if eq (.Values.moodle.volume.type | toString) "evs"}}
  annotations:
    everest.io/disk-volume-type: {{ .Values.volumes.evs.disk_type}}
  labels:
    failure-domain.beta.kubernetes.io/region: {{ .Values.volumes.evs.region | quote }}
    failure-domain.beta.kubernetes.io/zone: {{ .Values.volumes.evs.zone | quote}}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.moodle.volume.storage }}
  storageClassName: csi-disk
  {{- if not .Values.moodle.volume.dynamic_provision }}
  volumeName: {{ .Values.moodle.fullname }}-pv
  {{- end}}
{{- else if eq (.Values.moodle.volume.type | toString) "sfs"}}
    annotations:
    volume.beta.kubernetes.io/storage-provisioner: everest-csi-provisioner
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.moodle.volume.storage}}
  storageClassName: csi-nas
  {{- if not .Values.moodle.volume.dynamic_provision }}
  volumeName: {{ .Values.moodle.fullname }}-pv
  {{- end }}
{{- else if eq (.Values.moodle.volume.type | toString) "obs"}}
  annotations:
    {{- if not .Values.moodle.volume.dynamic_provision }}
    volume.beta.kubernetes.io/storage-provisioner: everest-csi-provisioner
    {{- end }}
    everest.io/obs-volume-type: STANDARD
    csi.storage.k8s.io/fstype: obsfs
    csi.storage.k8s.io/node-publish-secret-name: {{ .Values.secret.name }}
    csi.storage.k8s.io/node-publish-secret-namespace: {{ .Values.namespace }}
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.moodle.volume.storage }}
  storageClassName: csi-obs
  {{- if not .Values.moodle.volume.dynamic_provision }}
  volumeName: {{ .Values.moodle.fullname }}-pv
  {{- end }}
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.mariadb.fullname }}-pvc
  namespace: {{ .Values.namespace }}
  {{- if eq (.Values.mariadb.volume.type | toString) "evs"}}
  annotations:
    everest.io/disk-volume-type: {{ .Values.volumes.evs.disk_type}}
  labels:
    failure-domain.beta.kubernetes.io/region: {{ .Values.volumes.evs.region | quote }}
    failure-domain.beta.kubernetes.io/zone: {{ .Values.volumes.evs.zone | quote }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.mariadb.volume.storage }}
  storageClassName: csi-disk
  {{- if not .Values.mariadb.volume.dynamic_provision }}
  volumeName: {{ .Values.mariadb.fullname }}-pv
  {{- end}}
{{- else if eq (.Values.mariadb.volume.type | toString) "sfs"}}
    annotations:
    volume.beta.kubernetes.io/storage-provisioner: everest-csi-provisioner
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.mariadb.volume.storage}}
  storageClassName: csi-nas
  {{- if not .Values.mariadb.volume.dynamic_provision }}
  volumeName: {{ .Values.mariadb.fullname }}-pv
  {{- end }}
{{- else if eq (.Values.mariadb.volume.type | toString) "obs"}}
  annotations:
    {{- if not .Values.mariadb.volume.dynamic_provision }}
    volume.beta.kubernetes.io/storage-provisioner: everest-csi-provisioner
    {{- end }}
    everest.io/obs-volume-type: STANDARD
    csi.storage.k8s.io/fstype: obsfs
    csi.storage.k8s.io/node-publish-secret-name: {{ .Values.secret.name }}
    csi.storage.k8s.io/node-publish-secret-namespace: {{ .Values.namespace }}
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.mariadb.volume.storage }}
  storageClassName: csi-obs
  {{- if not .Values.mariadb.volume.dynamic_provision }}
  volumeName: {{ .Values.mariadb.fullname }}-pv
  {{- end }}
{{- end }}
---
