namespace: default

secret:
  name: key-access
  ak: Ulg1VkRXVVlKVVdFQ09OMlpFREo=
  sk: UVJFYjlNQnRKYklqQksxWmJQN3UzRWxsMVNYQ1M4dnE3cllYNzk2Qg==

moodle:
#name of the deployment
  fullname: moodle-demo

#image to be used
  image:
    repository: bitnami/moodle
    pullPolicy: IfNotPresent
    tag: "4.3"

#replicas
  replicascount: 1

#deploymentlabels
  deploymentlabels:
    environment: moodle

#Container labels
  containerlabels:
    app: moodle-app
    environment: moodle

#container specs
  spec:
    env:
      - name: MOODLE_DATABASE_HOST
        value: "mariadb"
      - name: MOODLE_DATABASE_PORT_NUMBER
        value: 3306
      - name: MOODLE_DATABASE_USER
        value: "bn_moodle"
      - name: MOODLE_DATABASE_NAME
        value: "bitnami_moodle"
      - name: ALLOW_EMPTY_PASSWORD
        value: yes

#resources limits
    resources:
      enabled: true
      limits:
        cpu: 4
        memory: 4Gi
      requests:
        cpu: 1
        memory: 2Gi

#ports
    ports:
      - containerPort: 8080
      - containerPort: 8443

#volume mount information
    volumeMounts:
        mountPath: bitnami/

#node selector for specific node
    nodeSelector:
      enabled: true
      name: moodle

#persistent volume claim
  volume:
#persistent volume claim name
    name: moodledata
    
    storage: 200Gi

#service to access the moodle pod
  service:
#note: the loadbalancer and publicip will be created dynamically
    name: moodle-elb
    annotations:
      kubernetes.io/elb.class: union
      kubernetes.io/elb.autocreate:
        '{
          "type": "public",
          "bandwidth_name": "moodle-demo",
          "bandwidth_chargemode":"traffic",
          "bandwidth_size": 300,
          "bandwidth_sharetype": "PER",
          "eip_type": "5_bgp",
          "name": "moodle-demo"
        }'

#service spec
    spec:
      type: LoadBalancer
      ports:
        - port: 80
          targetPort: 8080
          protocol: TCP
          name: http
        - port: 443
          targetPort: 8443
          protocol: TCP
          name: https
        - port: 443
          targetPort: 8443
          protocol: UDP
          name: http3
      selector:
        app: moodle-app

mariadb:
#stateful name
  fullname: mariadb
#image to be used

  image:
    repository: bitnami/mariadb
    pullPolicy: IfNotPresent
    tag: "11.2"

#replicas
  replicascount: 1

#statefulset labels
  statefulsetlabels:
    environment: moodle

#container labels
  containerlabels:
    app: mariadb
    environment: moodle

#container specs
  spec:
#environment variables
    env:
      - name: MARIADB_USER
        value: "bn_moodle"
      - name: ALLOW_EMPTY_PASSWORD
        value: yes
      - name: MARIADB_DATABASE
        value: "bitnami_moodle"
      - name: MARIADB_CHARACTER_SET
        value: "utf8mb4"
      - name: MARIADB_COLLATE
        value: "utf8mb4_unicode_ci"
#container port
    ports:
      - containerPort: 3306
#volume mounts
    volumeMounts:
        mountPath: bitnami/
#resources limits
    resources:
      enabled: true
      limits:
        cpu: 4
        memory: 4Gi
      requests:
        cpu: 1
        memory: 2Gi
    imagePullSecrets:
      - name: obs-secret
#enable for specific node
    nodeSelector:
      enabled: true
      name: "moodle"

#persistent volume claim
  volume:
    name: mariadb
    storage: 100Gi
        
#Cluster IP for internal access
  service:
    name: mariadb
    spec:
      ports:
        - port: 3306
          targetPort: 3306
      selector:
        app: mariadb

volumes:
#note: every type of persitent volume is dynamically created
#For more information about regions and availability zones see https://developer.huaweicloud.com/intl/en-us/endpoint
#Elastic Volume Services
  evs:
    enabled: true
    annotations:
      everest.io/disk-volume-type: SAS
    labels:
      failure-domain.beta.kubernetes.io/regio: la-north-2
      failure-domain.beta.kubernetes.io/zone: la-north-2c
    spec:
      accessModes: ReadWriteOnce #must be ReadWriteOnce
      storageClassName: csi-disk

#Object Storage Services
  obs:
    enabled: false
    annotations:
      everest.io/obs-volume-type: STANDARD
      csi.storage.k8s.io/fstype: obsfs
      csi.storage.k8s.io/node-publish-secret-name: <your_secret_name>
      csi.storage.k8s.io/node-publish-secret-namespace: <your_namespace>
    spec:
      accessModes: ReadWriteMany #must be ReadWriteMany
      storageClassName: csi-obs
